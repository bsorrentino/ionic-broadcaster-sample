import { BaseIntegration, IntegrationConfig } from '../';
import { InfoItem, IntegrationAddDetails, IntegrationName, ProjectIntegration, ProjectPersonalizationDetails } from '../../../definitions';
import { CapacitorConfig } from './config';
export declare class Integration extends BaseIntegration<ProjectIntegration> {
    readonly name: IntegrationName;
    readonly summary = "Target native iOS and Android with Capacitor, Ionic's new native layer";
    readonly archiveUrl: undefined;
    get config(): IntegrationConfig;
    add(details: IntegrationAddDetails): Promise<void>;
    getCapacitorConfig(): Promise<CapacitorConfig>;
    getCapacitorConfigPath(): string;
    installCapacitorCore(): Promise<void>;
    installCapacitorCLI(): Promise<void>;
    personalize({ name, packageId }: ProjectPersonalizationDetails): Promise<void>;
    getInfo(): Promise<InfoItem[]>;
    getCapacitorCLIVersion(): Promise<string | undefined>;
}
